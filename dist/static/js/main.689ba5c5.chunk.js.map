{"version":3,"sources":["mario.png","components/layout/signedInLinks.js","store/actions/authActions.js","components/layout/signedOutLinks.js","components/layout/navbar.js","components/project/projectSummary.js","components/project/projectsList.js","components/dashboard/notifications.js","components/dashboard/dashboard.js","components/project/projectDetails.js","components/auth/signIn.js","components/auth/signUp.js","store/actions/ProjectActions.js","components/project/createProject.js","App.js","serviceWorker.js","store/reducers/AuthReducer.js","store/reducers/ProjectReducer.js","store/reducers/RootReducer.js","configs/firebaseConfigs.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","src","Mario","alt","PorojectSummary","project","title","authorFirstName","authorLastName","moment","createdIn","toDate","toString","calendar","ProjectsList","projects","id","map","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","FirstName","LastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","error","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","AuthReducer","action","console","log","message","ProjectReducer","RootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.689ba5c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mario.2f45b67d.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>Create Project</NavLink></li>\r\n            <li><NavLink to='#' onClick={props.signOut}>Logout</NavLink></li>\r\n            <li><NavLink to='' className='btn btn-floating pink'>\r\n                {props.profile.initials}\r\n                </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type:  'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'LOGOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                FirstName: newUser.FirstName,\r\n                LastName: newUser.LastName,\r\n                initials: newUser.FirstName[0] + newUser.LastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './signedInLinks';\r\nimport SignedOutLinks from './signedOutLinks';\r\nimport Mario from '../../mario.png';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const links = props.auth.uid? <SignedInLinks profile={props.profile}/> : <SignedOutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"\"> <img className='logo-img' src={Mario} alt=\"\"/> </Link>\r\n                <Link to='/' className=\"brand-logo\">Mario Plan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst PorojectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card project-summary z-depth-0\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdIn.toDate().toString()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PorojectSummary;","import React from 'react';\r\nimport ProjectSummary from './projectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectsList = ({projects}) => {\r\n    return (\r\n        <div id='projects-list' className=\"projects-list scetion\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={`/projects/${project.id}`} key={project.id} >\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectsList;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li>\r\n                                    <span className=\"pink-text\">\r\n                                        {item.user + \" \"}\r\n                                    </span>\r\n                                    <span>\r\n                                        {item.content}\r\n                                    </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React , {Component} from 'react';\r\nimport ProjectsList from '../project/projectsList';\r\nimport Notifications from './notifications';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const {auth, project, notifications} = this.props\r\n        if(!auth.uid) return < Redirect to='signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\" col s12 m6\">\r\n                        <ProjectsList projects={project} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        project: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection : 'projects', orderBy: ['createdIn', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    let { project } = props;\r\n    if (project) {\r\n        return (\r\n            <div className=\"project-details container section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"footer crard-actions grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdIn.toDate().toString()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container center\">\r\n            <div className=\"preloader-wrapper big active\">\r\n                <div className=\"spinner-layer spinner-blue\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"circle-clipper \">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.id;\r\n    let projects = state.firestore.data.projects\r\n    let project = projects ? projects[id] : null\r\n    return {\r\n        project\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props\r\n        if(auth.uid) return < Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h4 className='grey-text text-darken-3'>Sign in</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink z-depth-0\">Sign in</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p> { authError } </p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        FirstName: '',\r\n        LastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth} = this.props\r\n        if(auth.uid) return < Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h4 className='grey-text text-darken-3'>Sign Up</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"FirstName\">First Name</label>\r\n                        <input type=\"text\" id='FirstName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"LastName\">Last Name</label>\r\n                        <input type=\"text\" id='LastName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        { this.props.authError ? <p> { this.props.authError } </p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: (newUser) => {dispatch(signUp(newUser))}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //perform some async code...\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.FirstName,\r\n            authorLastName: profile.LastName,\r\n            authorId,\r\n            createdIn: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project})\r\n        }).catch(err => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', error: err})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from \"../../store/actions/ProjectActions\"\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const {auth} = this.props\r\n        if (!auth.uid) return <Redirect to='signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h4 className='grey-text text-darken-3'>Create new project</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id='title' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project content</label>\r\n                        <textarea id='content'  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink z-depth-0\">Create project</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDsipatchToProps = (dispatch) => {\r\n    return {\r\n         createProject: (project) => {dispatch(createProject(project))}\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDsipatchToProps)(CreateProject)\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/navbar';\nimport Dashboard from './components/dashboard/dashboard';\nimport ProjectDetails from './components/project/projectDetails';\nimport SignIn from './components/auth/signIn';\nimport SignUp from './components/auth/signUp';\nimport CreateProject from './components/project/createProject';\n\nclass App extends Component {\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/projects/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst AuthReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR': console.log('LOGIN_ERROR')\r\n            return { \r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n            \r\n            case 'LOGIN_SUCCESS': console.log('LOGIN_SUCCESS')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n            case 'LOGOUT_SUCCESS' : console.log('LOGOUT_SUCCESS')\r\n            return state\r\n\r\n            case 'SIGNUP_SUCCESS': console.log('SIGNUP_SUCCESS')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n            case 'SIGNUP_ERROR': console.log('SIGNUP_ERROR', action.err)\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n            default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default AuthReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'Hello one', content: 'Lorem seprum Lorem seprum Lorem seprum'},\r\n        {id: '2', title: 'Hello two', content: 'Lorem seprum Lorem seprum Lorem seprum'},\r\n        {id: '3', title: 'Hello three', content: 'Lorem seprum Lorem seprum Lorem seprum'},\r\n        {id: '4', title: 'Hello four', content: 'Lorem seprum Lorem seprum Lorem seprum'}\r\n    ]\r\n}\r\n\r\nconst ProjectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT': \r\n        console.log(action.project)\r\n        return state;\r\n\r\n        case 'CREATE_PROJECT_ERROR': \r\n        console.log('error', action.err)\r\n        return state;\r\n\r\n        default : \r\n        return state;\r\n    }\r\n}\r\n\r\nexport default ProjectReducer;","import AuthReducer from './AuthReducer';\r\nimport ProjectReducer from './ProjectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst RootReducer = combineReducers({\r\n    auth: AuthReducer,\r\n    projects: ProjectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default RootReducer;","import  firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n \r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyDhE8hK9AFDZfGYgosAklDzTJlk1Vq37x0\",\r\n    authDomain: \"fierstore-demo.firebaseapp.com\",\r\n    databaseURL: \"https://fierstore-demo.firebaseio.com\",\r\n    projectId: \"fierstore-demo\",\r\n    storageBucket: \"fierstore-demo.appspot.com\",\r\n    messagingSenderId: \"200247023344\",\r\n    appId: \"1:200247023344:web:a10923d3e74d45eaf95435\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport RootReducer from './store/reducers/RootReducer';\nimport thunk from 'redux-thunk';\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport firebase from './configs/firebaseConfigs';\n\n\nconst store = createStore(RootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reduxFirestore(firebase), \n      reactReduxFirebase(firebase, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n  );\n\n  store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n  })\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}